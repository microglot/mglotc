// Â© 2023 Microglot LLC
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package idl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeUnknown-0]
	_ = x[TokenTypeIdentifier-1]
	_ = x[TokenTypeIntegerDecimal-2]
	_ = x[TokenTypeIntegerHex-3]
	_ = x[TokenTypeIntegerOctal-4]
	_ = x[TokenTypeIntegerBinary-5]
	_ = x[TokenTypeFloatDecimal-6]
	_ = x[TokenTypeFloatHex-7]
	_ = x[TokenTypeText-8]
	_ = x[TokenTypeData-9]
	_ = x[TokenTypeComment-10]
	_ = x[TokenTypeEscaped-11]
	_ = x[TokenTypeProse-12]
	_ = x[TokenTypeQuote-13]
	_ = x[TokenTypeTick-14]
	_ = x[TokenTypeCurlyOpen-15]
	_ = x[TokenTypeCurlyClose-16]
	_ = x[TokenTypeSquareOpen-17]
	_ = x[TokenTypeSquareClose-18]
	_ = x[TokenTypeParenOpen-19]
	_ = x[TokenTypeParenClose-20]
	_ = x[TokenTypePlus-21]
	_ = x[TokenTypePlusEqual-22]
	_ = x[TokenTypeMinus-23]
	_ = x[TokenTypeMinusEqual-24]
	_ = x[TokenTypeDot-25]
	_ = x[TokenTypeUnderscore-26]
	_ = x[TokenTypeStar-27]
	_ = x[TokenTypeMultiplyEqual-28]
	_ = x[TokenTypeComma-29]
	_ = x[TokenTypeColon-30]
	_ = x[TokenTypeAngleOpen-31]
	_ = x[TokenTypeLesserEqual-32]
	_ = x[TokenTypeAngleClose-33]
	_ = x[TokenTypeGreaterEqual-34]
	_ = x[TokenTypeDollar-35]
	_ = x[TokenTypeAt-36]
	_ = x[TokenTypeEqual-37]
	_ = x[TokenTypeComparison-38]
	_ = x[TokenTypeNotComparison-39]
	_ = x[TokenTypeSlash-40]
	_ = x[TokenTypeDivideEqual-41]
	_ = x[TokenTypeExclamation-42]
	_ = x[TokenTypePercent-43]
	_ = x[TokenTypeCaret-44]
	_ = x[TokenTypeAmpersand-45]
	_ = x[TokenTypeBinAnd-46]
	_ = x[TokenTypePipe-47]
	_ = x[TokenTypeBinOr-48]
	_ = x[TokenTypeQuestion-49]
	_ = x[TokenTypeSquote-50]
	_ = x[TokenTypeTilde-51]
	_ = x[TokenTypeSemicolon-52]
	_ = x[TokenTypeKeywordImport-53]
	_ = x[TokenTypeKeywordAs-54]
	_ = x[TokenTypeKeywordConst-55]
	_ = x[TokenTypeKeywordAnnotation-56]
	_ = x[TokenTypeKeywordStruct-57]
	_ = x[TokenTypeKeywordField-58]
	_ = x[TokenTypeKeywordUnion-59]
	_ = x[TokenTypeKeywordEnum-60]
	_ = x[TokenTypeKeywordEnumerant-61]
	_ = x[TokenTypeKeywordInterface-62]
	_ = x[TokenTypeKeywordAPI-63]
	_ = x[TokenTypeKeywordMethod-64]
	_ = x[TokenTypeKeywordSDK-65]
	_ = x[TokenTypeKeywordImpl-66]
	_ = x[TokenTypeKeywordModule-67]
	_ = x[TokenTypeKeywordSyntax-68]
	_ = x[TokenTypeKeywordExtends-69]
	_ = x[TokenTypeKeywordThrows-70]
	_ = x[TokenTypeKeywordNothrows-71]
	_ = x[TokenTypeKeywordReturns-72]
	_ = x[TokenTypeKeywordThrow-73]
	_ = x[TokenTypeKeywordCatch-74]
	_ = x[TokenTypeKeywordReturn-75]
	_ = x[TokenTypeKeywordSwitch-76]
	_ = x[TokenTypeKeywordDefault-77]
	_ = x[TokenTypeKeywordVar-78]
	_ = x[TokenTypeKeywordFor-79]
	_ = x[TokenTypeKeywordIn-80]
	_ = x[TokenTypeKeywordWhile-81]
	_ = x[TokenTypeKeywordSet-82]
	_ = x[TokenTypeKeywordRequires-83]
	_ = x[TokenTypeKeywordCase-84]
	_ = x[TokenTypeKeywordIf-85]
	_ = x[TokenTypeKeywordElse-86]
	_ = x[TokenTypeKeywordTrue-87]
	_ = x[TokenTypeKeywordFalse-88]
	_ = x[TokenTypeKeywordAsync-89]
	_ = x[TokenTypeKeywordAwait-90]
	_ = x[TokenTypeKeywordExec-91]
	_ = x[TokenTypeWhitespace-92]
	_ = x[TokenTypeNewline-93]
	_ = x[TokenTypeEOF-94]
}

const _TokenType_name = "TokenTypeUnknownTokenTypeIdentifierTokenTypeIntegerDecimalTokenTypeIntegerHexTokenTypeIntegerOctalTokenTypeIntegerBinaryTokenTypeFloatDecimalTokenTypeFloatHexTokenTypeTextTokenTypeDataTokenTypeCommentTokenTypeEscapedTokenTypeProseTokenTypeQuoteTokenTypeTickTokenTypeCurlyOpenTokenTypeCurlyCloseTokenTypeSquareOpenTokenTypeSquareCloseTokenTypeParenOpenTokenTypeParenCloseTokenTypePlusTokenTypePlusEqualTokenTypeMinusTokenTypeMinusEqualTokenTypeDotTokenTypeUnderscoreTokenTypeStarTokenTypeMultiplyEqualTokenTypeCommaTokenTypeColonTokenTypeAngleOpenTokenTypeLesserEqualTokenTypeAngleCloseTokenTypeGreaterEqualTokenTypeDollarTokenTypeAtTokenTypeEqualTokenTypeComparisonTokenTypeNotComparisonTokenTypeSlashTokenTypeDivideEqualTokenTypeExclamationTokenTypePercentTokenTypeCaretTokenTypeAmpersandTokenTypeBinAndTokenTypePipeTokenTypeBinOrTokenTypeQuestionTokenTypeSquoteTokenTypeTildeTokenTypeSemicolonTokenTypeKeywordImportTokenTypeKeywordAsTokenTypeKeywordConstTokenTypeKeywordAnnotationTokenTypeKeywordStructTokenTypeKeywordFieldTokenTypeKeywordUnionTokenTypeKeywordEnumTokenTypeKeywordEnumerantTokenTypeKeywordInterfaceTokenTypeKeywordAPITokenTypeKeywordMethodTokenTypeKeywordSDKTokenTypeKeywordImplTokenTypeKeywordModuleTokenTypeKeywordSyntaxTokenTypeKeywordExtendsTokenTypeKeywordThrowsTokenTypeKeywordNothrowsTokenTypeKeywordReturnsTokenTypeKeywordThrowTokenTypeKeywordCatchTokenTypeKeywordReturnTokenTypeKeywordSwitchTokenTypeKeywordDefaultTokenTypeKeywordVarTokenTypeKeywordForTokenTypeKeywordInTokenTypeKeywordWhileTokenTypeKeywordSetTokenTypeKeywordRequiresTokenTypeKeywordCaseTokenTypeKeywordIfTokenTypeKeywordElseTokenTypeKeywordTrueTokenTypeKeywordFalseTokenTypeKeywordAsyncTokenTypeKeywordAwaitTokenTypeKeywordExecTokenTypeWhitespaceTokenTypeNewlineTokenTypeEOF"

var _TokenType_index = [...]uint16{0, 16, 35, 58, 77, 98, 120, 141, 158, 171, 184, 200, 216, 230, 244, 257, 275, 294, 313, 333, 351, 370, 383, 401, 415, 434, 446, 465, 478, 500, 514, 528, 546, 566, 585, 606, 621, 632, 646, 665, 687, 701, 721, 741, 757, 771, 789, 804, 817, 831, 848, 863, 877, 895, 917, 935, 956, 982, 1004, 1025, 1046, 1066, 1091, 1116, 1135, 1157, 1176, 1196, 1218, 1240, 1263, 1285, 1309, 1332, 1353, 1374, 1396, 1418, 1441, 1460, 1479, 1497, 1518, 1537, 1561, 1581, 1599, 1619, 1639, 1660, 1681, 1702, 1722, 1741, 1757, 1769}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
